name: Build & Test
on:
  push:
    branches: [ "feature/*" ]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      TEST_PROJECT: src/Todo.Minimalist.Api.Tests
      BUILD_PROJECT: src/Todo.Minimalist.Api/Todo.Minimalist.Api.sln
      COVERAGE_DIR: TestResults/coverage/html

    steps:
      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Install .NET SDK 10
        uses: actions/setup-dotnet@v5
        with:          
          dotnet-version: '10.x.x'

      - name: Restore NuGet dependencies
        run: dotnet restore $BUILD_PROJECT

      - name: Analyze code style and formatting
        run: dotnet format $BUILD_PROJECT --verify-no-changes --severity error

      - name: Check for vulnerable NuGet packages
        run: dotnet list $BUILD_PROJECT package --vulnerable

      - name: Build solution in Release mode
        run: dotnet build --configuration Release $BUILD_PROJECT --no-restore

      - name: Run unit tests and collect code coverage
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage" /p:Threshold=80 /p:ThresholdType=line /p:FailWhenCoverageBelowThreshold=true
        working-directory: ${{ env.TEST_PROJECT }}

      - name: Generate HTML coverage report from test results
        run: |
          dotnet tool restore
          dotnet reportgenerator \
            -reports:TestResults/*/coverage.cobertura.xml \
            -targetdir:$COVERAGE_DIR \
            -reporttypes:HtmlSummary
        working-directory: ${{ env.TEST_PROJECT }}

      - name: Upload HTML coverage report as workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ${{ env.TEST_PROJECT }}/${{ env.COVERAGE_DIR }}